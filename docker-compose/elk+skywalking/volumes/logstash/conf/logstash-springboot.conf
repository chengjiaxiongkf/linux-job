# 从java中输出
# input {
#   tcp {
#     mode => "server"
#     host => "0.0.0.0"
#     port => 4560
#     codec => json_lines
#   }
# }
# 从filebeat中输出
input {
  beats {
    port => 4560
    host => "0.0.0.0"
  }
}
filter {
  mutate{
    #去除掉filebeat的多余字段
        remove_field => ["@version"]
        # remove_field => ["@timestamp"]
        remove_field => ["@version.keyword"]
        remove_field => ["host"]
        remove_field => ["agent"]
        remove_field => ["ecs"]
        remove_field => ["tags"]
        remove_field => ["fields"]
        remove_field => ["input"]
        remove_field => ["log"]
  }
  grok {
      #对应此grok的logback日志格式 
      #<!--日志输出格式-->
      #<property name="LOG_PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}]-[%ip]-[${APP_NAME}]-[%tid]-[${PID}]-[%thread] %-5level %logger{36} [%M]:%L - %msg%n"/>
    match => {
        "message" => "(?m)^\[%{TIMESTAMP_ISO8601:@TIME}\]-\[%{DATA:IP}\]-\[%{DATA:SERVICE_NAME}\]-\[TID:%{DATA:TID}\]-\[%{INT:PID}\]-\[%{DATA:THREAD_NAME}\]%{SPACE}%{LOGLEVEL:LEVEL}%{SPACE}%{JAVACLASS:JAVA_CLASS}%{SPACE}\[%{DATA:METHOD_NAME}\]:%{INT:NUM_NO}%{SPACE}-%{SPACE}%{GREEDYDATA:MSG}"
    }
  }  
  #把日志内提取的time字段用作@timestamp做日期时间字段
  date {
    timezone => "Asia/Shanghai"	#解决时区问题
    match => ["TIME", "yyyy-MM-dd HH:mm:ss"] #匹配timestamp字段
    target => "@timestamp"  #将匹配到的数据写到@timestamp字段中
  }
}
output {
  stdout { codec => rubydebug }
  # if [fields][serviceName] == "point" {
    # elasticsearch {
    #   hosts => "es:9200"
    #   index => "java-point"
    #   user => "elastic" #用户名
    #   password => "admin123"   #es 配置了密码 把这个打开
    # }
  # }

  elasticsearch {
    hosts => "es:9200"
    index => "java-cluster"
    user => "elastic" #用户名
    password => "admin123"   #es 配置了密码 把这个打开
  }
}